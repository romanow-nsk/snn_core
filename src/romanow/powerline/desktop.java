/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.powerline;

import java.awt.FileDialog;
import romanow.snn_simulator.fft.FFT;
import romanow.snn_simulator.fft.FFTArray;
import romanow.snn_simulator.fft.FFTAudioFile;
import romanow.snn_simulator.fft.FFTAudioTextFile;
import romanow.snn_simulator.fft.FFTCallBack;

/**
 *
 * @author romanow
 */
public class desktop extends javax.swing.JFrame {

    /**
     * Creates new form desktop
     */
    private javax.swing.JSlider Ampl; 
    private javax.swing.JSlider Freq; 
    private FAPanel panel;
    private FTPanel panel2;
    private boolean white = false;
    private FFT100 fft = null;
    private int masX=10;
    private int masY=20;
    public desktop() {
        initComponents();
        setTitle("Поющие столбы России");
        this.setBounds(30,20, 880, 670);
        panel = new FAPanel(350,10,500,200,white);       // 
        panel2 = new FTPanel(350,215,500,400,white);     // 
        add(panel);        
        add(panel2); 
        Ampl = new javax.swing.JSlider();
        Ampl.setMinimum(1);
        Ampl.setMaximum(50);
        Ampl.setValue(20);
        Ampl.setOrientation(javax.swing.JSlider.VERTICAL);
        Ampl.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                masY=Ampl.getValue();
                }
            });
        Ampl.setBounds(320, 10, 30, 110);
        add(Ampl);
        Freq = new javax.swing.JSlider();
        Freq.setMinimum(1);
        Freq.setMaximum(50);
        Freq.setValue(10);
        Freq.setOrientation(javax.swing.JSlider.HORIZONTAL);
        Freq.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                masX=Freq.getValue();
                }
            });
        Freq.setBounds(200, 0, 110, 30);
        add(Freq);
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        Mes = new java.awt.TextArea();
        jButton2 = new javax.swing.JButton();
        xxx = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setText("Конвертировать");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 10, 120, 23);
        getContentPane().add(Mes);
        Mes.setBounds(10, 220, 310, 330);

        jButton2.setText("Загрузить");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(10, 40, 120, 23);

        xxx.setText("Выполнить");
        xxx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xxxActionPerformed(evt);
            }
        });
        getContentPane().add(xxx);
        xxx.setBounds(10, 70, 120, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private FFTCallBack back = new FFTCallBack(){
        @Override
        public void onStart(float msOnStep) {
            }
        @Override
        public void onFinish() {
            }
        @Override
        public boolean onStep(int nBlock, int calcMS, float totalMS, FFT fft) {
            return false;
            }
        @Override
        public void onError(Exception ex) {
            toLog(true,"1."+ex.toString());
            }
        @Override
        public void onMessage(String mes) {
            toLog(mes);
            }
        };    

     private void toLog(String ss){
        toLog(false,ss);
        }
     private int count=0;
    private void toLog(boolean high,String ss){
        count++;
        if (count==1000)
            Mes.setText("");
        Mes.append(ss+"\n");
        }
    private void toLog(Throwable ee){
        count++;
        if (count==1000)
            Mes.setText("");
        Mes.append(ee.toString()+"\n");
        StackTraceElement ss[] = ee.getStackTrace();
        for (int i=0;i<5 && i< ss.length;i++)
            Mes.append(ss[i].toString()+"\n");
        }
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FileDialog dlg=new FileDialog(this,"Звуковой файл",FileDialog.LOAD);
        String ex = "txt";
        dlg.setFile("*."+ex);
        dlg.show();
        String ss1 = dlg.getDirectory();
        String ss2 = dlg.getFile();
        FFTAudioTextFile src = new FFTAudioTextFile();
        src.convertToWave(ss1+ss2, back);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FileDialog dlg=new FileDialog(this,"Звуковой файл",FileDialog.LOAD);
        dlg.setFile("*.wav");
        dlg.show();
        String ss1 = dlg.getDirectory();
        String ss2 = dlg.getFile();
        if (ss1==null || ss2==null)
            toLog("Имя файла ???");
        else{
            FFTAudioFile file = new FFTAudioFile();
            boolean ff = file.testAndOpenFile(FFTAudioFile.Open,ss1+ss2, 100,new FFTCallBack(){
                @Override
                public void onStart(float msOnStep) {
                    }
                @Override
                public void onFinish() {
                    }
                @Override
                public boolean onStep(int nBlock, int msDelay, float totalMS, FFT fft) {
                    return false;
                    }
                @Override
                public void onError(Exception ee) {
                    toLog(true,"3."+ee.toString());
                    }
                @Override
                public void onMessage(String mes) {
                    toLog(mes);
                    }
                });
            fft = new FFT100();
            fft.setProcOver(90);
            fft.setStepHZLinear(0.2f);
            int sz = fft.getAudioLength(file, back);
            fft.preloadWave(file, back);
            fft.preloadFullSpectrum(file, back);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private boolean isrun=false;
    private void xxxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xxxActionPerformed
        if (isrun){
            isrun=false;
            xxx.setText("Выполнить");
            return;
            }
        isrun=true;
        xxx.setText("Остановить");
        panel2.reset();
        new Thread(){
            public void run(){
                FFTArray list[] = fft.getSpectrumList();
                for(int i=0;isrun && i<list.length;i++){
                    panel.paint(masX, masY, list[i].getOriginal(),true,fft.getStepHZLinear());
                    panel2.paint(masX,masY,list[i].getOriginal(),fft.getStepHZLinear());                
                    delay(100);
                    }
                isrun=false;
                xxx.setText("Выполнить");
            }}.start();
    }//GEN-LAST:event_xxxActionPerformed

    void delay(int ms){
        try {
            Thread.sleep(ms);
            } catch (InterruptedException ex) {}
        }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new desktop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea Mes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton xxx;
    // End of variables declaration//GEN-END:variables
}
